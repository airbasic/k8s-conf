apiVersion: v1beta3
kind: ReplicationController
metadata:
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
  name: kube-dns
  namespace: default
spec:
  replicas: 1
  selector:
    k8s-app: kube-dns
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-dns
        kubernetes.io/cluster-service: "true"
        name: kube-dns
    spec:
      containers:
      - args:
        - -listen-client-urls=http://0.0.0.0:2379,http://0.0.0.0:4001
        - -initial-cluster-token=skydns-etcd
        - -advertise-client-urls=http://127.0.0.1:4001
        capabilities: {}
        image: r.fds.so:5000/etcd:v2.0.3
        imagePullPolicy: IfNotPresent
        name: etcd
        resources: {}
        terminationMessagePath: /dev/termination-log
      - args:
        - -domain=kube.local
        capabilities: {}
        image: r.fds.so:5000/kube2sky:1.1
        imagePullPolicy: IfNotPresent
        name: kube2sky
        resources: {}
        terminationMessagePath: /dev/termination-log
      - args:
        - -machines=http://localhost:4001
        - -addr=0.0.0.0:53
        - -domain=kube.local.
        capabilities: {}
        image: r.fds.so:5000/skydns:2015-03-11-001
        imagePullPolicy: IfNotPresent
        name: skydns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        resources: {}
        terminationMessagePath: /dev/termination-log
      dnsPolicy: Default
      nodeSelector:
        env: "20150710"
      restartPolicy: Always
      volumes: null

